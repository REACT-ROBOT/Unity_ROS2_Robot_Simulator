//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.SimulationInterfaces
{
    [Serializable]
    public class NamedPoseMsg : Message
    {
        public const string k_RosMessageName = "simulation_interfaces/NamedPose";
        public override string RosMessageName => k_RosMessageName;

        //  A named pose defined in the simulation for certain purposes such as spawning.
        public string name;
        //  Unique name.
        public string description;
        //  Description for the user, e.g. "near the charging station".
        public string[] tags;
        //  Optional tags which can be used to determine the named pose
        //  purpose, for example: "spawn", "parking", "navigation_goal",
        //  as well as fitting entity types e.g. "drone", "turtlebot3".
        public Geometry.PoseMsg pose;
        //  Pose relative to world, which can be used with SpawnEntity.srv.

        public NamedPoseMsg()
        {
            this.name = "";
            this.description = "";
            this.tags = new string[0];
            this.pose = new Geometry.PoseMsg();
        }

        public NamedPoseMsg(string name, string description, string[] tags, Geometry.PoseMsg pose)
        {
            this.name = name;
            this.description = description;
            this.tags = tags;
            this.pose = pose;
        }

        public static NamedPoseMsg Deserialize(MessageDeserializer deserializer) => new NamedPoseMsg(deserializer);

        private NamedPoseMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.name);
            deserializer.Read(out this.description);
            deserializer.Read(out this.tags, deserializer.ReadLength());
            this.pose = Geometry.PoseMsg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.name);
            serializer.Write(this.description);
            serializer.WriteLength(this.tags);
            serializer.Write(this.tags);
            serializer.Write(this.pose);
        }

        public override string ToString()
        {
            return "NamedPoseMsg: " +
            "\nname: " + name.ToString() +
            "\ndescription: " + description.ToString() +
            "\ntags: " + System.String.Join(", ", tags.ToList()) +
            "\npose: " + pose.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
