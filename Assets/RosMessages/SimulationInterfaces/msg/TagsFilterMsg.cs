//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.SimulationInterfaces
{
    [Serializable]
    public class TagsFilterMsg : Message
    {
        public const string k_RosMessageName = "simulation_interfaces/TagsFilter";
        public override string RosMessageName => k_RosMessageName;

        //  An utility message type for specification of tag-based filtering
        public string[] tags;
        //  Optional, defaults to empty, which means no tags filter.
        //  Results matching any or all of tags will be returned, depending
        //  on tags_filter_mode.
        public const byte FILTER_MODE_ANY = 0; //  Filter with OR mode (any tag can match).
        public const byte FILTER_MODE_ALL = 1; //  Filter with AND mode (all tags need to match).
        public byte filter_mode;
        //  Set to control filter application for tags.

        public TagsFilterMsg()
        {
            this.tags = new string[0];
            this.filter_mode = 0;
        }

        public TagsFilterMsg(string[] tags, byte filter_mode)
        {
            this.tags = tags;
            this.filter_mode = filter_mode;
        }

        public static TagsFilterMsg Deserialize(MessageDeserializer deserializer) => new TagsFilterMsg(deserializer);

        private TagsFilterMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.tags, deserializer.ReadLength());
            deserializer.Read(out this.filter_mode);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.WriteLength(this.tags);
            serializer.Write(this.tags);
            serializer.Write(this.filter_mode);
        }

        public override string ToString()
        {
            return "TagsFilterMsg: " +
            "\ntags: " + System.String.Join(", ", tags.ToList()) +
            "\nfilter_mode: " + filter_mode.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
