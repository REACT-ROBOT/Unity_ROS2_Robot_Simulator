//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.SimulationInterfaces
{
    [Serializable]
    public class SpawnEntityResponse : Message
    {
        public const string k_RosMessageName = "simulation_interfaces/SpawnEntity";
        public override string RosMessageName => k_RosMessageName;

        //  Additional result.result_code values for this service. Check result.error_message for further details.
        public const byte NAME_NOT_UNIQUE = 101; //  Given name is already taken by entity and allow_renaming is false.
        public const byte NAME_INVALID = 102; //  Given name is invalid in the simulator (e.g. does not meet naming
        //  requirements such as allowed characters). This is also returned if name is
        //  empty and allow_renaming is false.
        public const byte UNSUPPORTED_FORMAT = 103; //  Format for uri or resource string is unsupported. Check supported formats
        //  through GetSimulatorFeatures service, in spawn_formats field.
        public const byte NO_RESOURCE = 104; //  Both uri and resource string are empty.
        public const byte NAMESPACE_INVALID = 105; //  Namespace does not meet namespace naming standards.
        public const byte RESOURCE_PARSE_ERROR = 106; //  Resource file or string failed to parse.
        public const byte MISSING_ASSETS = 107; //  At least one of resource assets (such as meshes) was not found.
        public const byte UNSUPPORTED_ASSETS = 108; //  At least one of resource assets (such as meshes) is not supported.
        public const byte INVALID_POSE = 109; //  initial_pose is invalid, such as when the quaternion is invalid or position
        //  exceeds simulator world bounds.
        public ResultMsg result;
        public string entity_name;
        //  Spawned entity full name, guaranteed to be unique in the simulation.
        //  If allow_renaming is true, it may differ from the request name field.

        public SpawnEntityResponse()
        {
            this.result = new ResultMsg();
            this.entity_name = "";
        }

        public SpawnEntityResponse(ResultMsg result, string entity_name)
        {
            this.result = result;
            this.entity_name = entity_name;
        }

        public static SpawnEntityResponse Deserialize(MessageDeserializer deserializer) => new SpawnEntityResponse(deserializer);

        private SpawnEntityResponse(MessageDeserializer deserializer)
        {
            this.result = ResultMsg.Deserialize(deserializer);
            deserializer.Read(out this.entity_name);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.result);
            serializer.Write(this.entity_name);
        }

        public override string ToString()
        {
            return "SpawnEntityResponse: " +
            "\nresult: " + result.ToString() +
            "\nentity_name: " + entity_name.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize, MessageSubtopic.Response);
        }
    }
}
