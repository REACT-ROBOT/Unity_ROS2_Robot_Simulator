//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.SimulationInterfaces
{
    [Serializable]
    public class GetEntitiesStatesResponse : Message
    {
        public const string k_RosMessageName = "simulation_interfaces/GetEntitiesStates";
        public override string RosMessageName => k_RosMessageName;

        public ResultMsg result;
        public string[] entities;
        //  Unique names of all entities matching the filters.
        public EntityStateMsg[] states;
        //  States for these entities.

        public GetEntitiesStatesResponse()
        {
            this.result = new ResultMsg();
            this.entities = new string[0];
            this.states = new EntityStateMsg[0];
        }

        public GetEntitiesStatesResponse(ResultMsg result, string[] entities, EntityStateMsg[] states)
        {
            this.result = result;
            this.entities = entities;
            this.states = states;
        }

        public static GetEntitiesStatesResponse Deserialize(MessageDeserializer deserializer) => new GetEntitiesStatesResponse(deserializer);

        private GetEntitiesStatesResponse(MessageDeserializer deserializer)
        {
            this.result = ResultMsg.Deserialize(deserializer);
            deserializer.Read(out this.entities, deserializer.ReadLength());
            deserializer.Read(out this.states, EntityStateMsg.Deserialize, deserializer.ReadLength());
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.result);
            serializer.WriteLength(this.entities);
            serializer.Write(this.entities);
            serializer.WriteLength(this.states);
            serializer.Write(this.states);
        }

        public override string ToString()
        {
            return "GetEntitiesStatesResponse: " +
            "\nresult: " + result.ToString() +
            "\nentities: " + System.String.Join(", ", entities.ToList()) +
            "\nstates: " + System.String.Join(", ", states.ToList());
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize, MessageSubtopic.Response);
        }
    }
}
