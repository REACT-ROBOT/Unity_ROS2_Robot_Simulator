//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.SimulationInterfaces
{
    [Serializable]
    public class SetEntityStateRequest : Message
    {
        public const string k_RosMessageName = "simulation_interfaces/SetEntityState";
        public override string RosMessageName => k_RosMessageName;

        //  Set a state of an object, which will result in an instant change in its pose and/or twist.
        //  Support for this interface is indicated through the ENTITY_STATE_SETTING value in GetSimulationFeatures.
        public string entity;
        //  Entity identified by its unique name as returned by GetEntities / SpawnEntity.
        public EntityStateMsg state;
        //  New state to set immediately. The timestamp in header is ignored.
        //  If non-zero twist or acceleration is requested for static object, the service call
        //  fails and RESULT_OPERATION_FAILED is returned.
        //  Note that the acceleration field may be ignored by simulators.

        public SetEntityStateRequest()
        {
            this.entity = "";
            this.state = new EntityStateMsg();
        }

        public SetEntityStateRequest(string entity, EntityStateMsg state)
        {
            this.entity = entity;
            this.state = state;
        }

        public static SetEntityStateRequest Deserialize(MessageDeserializer deserializer) => new SetEntityStateRequest(deserializer);

        private SetEntityStateRequest(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.entity);
            this.state = EntityStateMsg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.entity);
            serializer.Write(this.state);
        }

        public override string ToString()
        {
            return "SetEntityStateRequest: " +
            "\nentity: " + entity.ToString() +
            "\nstate: " + state.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
