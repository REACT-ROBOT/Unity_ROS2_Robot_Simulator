//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.SimulationInterfaces
{
    [Serializable]
    public class GetSpawnablesRequest : Message
    {
        public const string k_RosMessageName = "simulation_interfaces/GetSpawnables";
        public override string RosMessageName => k_RosMessageName;

        //  Return a list of resources which are valid as SpawnEntity uri fields (e.g. visible to or registered in simulator).
        //  This interface is an optional extension and might not be implemented by your simulator, check the result_code.
        //  Support for this interface is indicated through the SPAWNABLES value in GetSimulationFeatures.
        public string[] sources;
        //  Optional field for additional sources (local or remote) to search.
        //  By default, each simulator has visibility of spawnables through
        //  some mechanisms, e.g. a set of paths, registered assets etc.
        //  Since the simulator cannot possibly look everywhere,
        //  this field allows the user to specify additional sources.
        //  Unrecognized values are listed as such in the result.error_message,
        //  but do not hinder success of the response.
        //  Sources may include subcategories and be simulator-specific.

        public GetSpawnablesRequest()
        {
            this.sources = new string[0];
        }

        public GetSpawnablesRequest(string[] sources)
        {
            this.sources = sources;
        }

        public static GetSpawnablesRequest Deserialize(MessageDeserializer deserializer) => new GetSpawnablesRequest(deserializer);

        private GetSpawnablesRequest(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.sources, deserializer.ReadLength());
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.WriteLength(this.sources);
            serializer.Write(this.sources);
        }

        public override string ToString()
        {
            return "GetSpawnablesRequest: " +
            "\nsources: " + System.String.Join(", ", sources.ToList());
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
